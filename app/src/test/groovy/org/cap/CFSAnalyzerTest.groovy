/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package org.cap

import spock.lang.Specification
import java.lang.Math

import org.cap.simulation.CFSAnalyzer;

class CFSAnalyzerTest extends Specification {
    // def "test mode operation"() {
    //     when:
    //         def jiffy_us = 1000;
    //         def adjust_time_slice = Math.floorDiv(time_slice, jiffy_us);
    //         adjust_time_slice *= jiffy_us;
    //     then :
    //         expected == adjust_time_slice
    //     where :
    //         time_slice | expected
    //         2500 | 3000
    //         3000 | 4000
    // }

    // def "test mode operation"() {
    //     expect :
    //         expected == (2 % input)
    //     where :
    //         input | expected
    //         1     | 0
    //         0     | 0
    // }

    // def "mod can be used to implement floor"(){
    //     when :
    //         def result1 = R - (R % T)
    //         def result2 = Math.floor(R / T) * T
    //     then :
    //         result1 == result2
    //     where :
    //         R | T
    //         13423 | 43
    //         234 | 46
    //         2435 | 36
    //         675 | 23
    // }

    // def "test div with ints"(){
    //     when : 
    //         int result1 = ((int) (input1/input2)) * input3;
    //         int result2 = Math.floor(input1 / input2) * input3;
    //     then :
    //         result1 == result2
    //     where :
    //         input1 | input2 | input3
    //         3412 | 234 | 24
    //         6743 | 356 | 75
    //         6785 | 74 | 34
    //         5734 | 234 | 5
    // }
}
